.Dd 11/1/2022
.Dt _printf 3
.Os UBUNTU 20.04 LTS
.Sh NAME
.Nm _printf
.Nd Holberton School format output conversion
.Sh SYNOPSIS
.Nm #include "main.h"
.Pp
.Nm _printf(const char *
.Ar format
, ...);
.Sh DESCRIPTION
The
.Nm
function is an imitator of the C <stdio.h> library printf() function.
The
.Nm
function writes values to
.Ar stdout
according to a
.Ar format
a string that says how arguments will be converted for output. Arguments will be decribed further  down this manual.
.Pp
.Sh Format of the string
.Pp
The
.Ar format
The Format specifier is a string used in the formatted input and output functions. The format string determines the format of the input and output.The format string always starts with a '%' character. Thecommonly used format specifiers in printf() function are: Format specifier.
.Nm
will misbehave
.Pp
.Sh  Conversion specifiers
.Pp
A conversion specifier is a character that is preceded by a '%' character.
.Pp
.Bl -tag -width -indent
.It d, i
A signed integer value is printed
.It s
A string (character array) is printed, up to but not including the terminating
null ('\\0') byte.
A single character is printed.
.El
.Pp
.Sh RETURN VALUE
When the
.Nm
function successfuly executes, the function returns the number
of characters printed.
If an output error is encountered, a negative value is returned.
.Sh NOTES
Got information for our Printf from Google also used information from Linux Programmer's Manual and asked peers for extra input on this man page so credit goes to all three of these sources.

